import { io, strconv }

flow Main(start) (stop) {
	App, Println
	---
	:start -> app
	[app:res, app:err] -> println -> :stop
}

flow App(sig) (res int, err error) {
	readFirstInt ReadIntFromStdin
	readSecondInt ReadIntFromStdin
	add ReducePort<int> { Add<int> }
	---
	:sig -> readFirstInt
	readFirstInt:num -> [add[0], readSecondInt]
	readSecondInt:num -> add[1]
	[readFirstInt:err, readSecondInt:err] -> :err
	add -> :res
}

flow ReadIntFromStdin(sig) (num int, err error) {
	io.Scanln, strconv.ParseNum<int>
	---
	:sig -> scanln -> parseNum
	parseNum:res -> :num
	parseNum:err -> :err
}
