// FIXME: println is used multuple times as receiver in this file

// https://www.99-bottles-of-beer.net

flow Main(start) (stop) {
    Range, Wait
    first ForEach{PrintFirstLine}
    second ForEach{PrintSecondLine}
    ---
    :start -> [(99 -> range:from), (-1 -> range:to)]
    range -> first -> second -> wait -> :stop
}

// === First Line ===

const firstLine1 string = '$0 bottles of beer on the wall, $0 bottles of beer.\n'
const firstLine2 string = '1 bottle of beer on the wall, 1 bottle of beer.'
const firstLine3 string = 'No more bottles of beer on the wall, no more bottles of beer.'

flow PrintFirstLine(data int) (sig) {
    Switch<int>, p1 Println, p2 Println, Printf

    ---

    :data -> switch:data

    0 -> switch:case[0] -> ($firstLine3 -> p1)
    1 -> switch:case[1] -> ($firstLine2 -> p2)
    switch:else -> [
        printf:args[0],
        ($firstLine1 -> printf:tpl)
    ]

    [p1, p2, printf:sig] -> :sig
}

// === Second Line ===

const secondLine1 string = 'Take one down and pass it around, $0 bottles of beer on the wall.\n\n'
const secondLine2 string = 'Take one down and pass it around, 1 bottle of beer on the wall.\n'
const secondLine3 string = 'Take one down and pass it around, no more bottles of beer on the wall.\n'
const secondLine4 string = 'Go to the store and buy some more, 99 bottles of beer on the wall.'

flow PrintSecondLine(data int) (sig) {
    Switch<int>
    p1 Println, p2 Println, p3 Println, Printf

    ---

    :data -> switch:data

    -1 -> switch:case[0] -> ($secondLine4 -> p1)
    0  -> switch:case[1] -> ($secondLine3 -> p2)
    1  -> switch:case[2] -> ($secondLine2 -> p3)

    switch:else -> [
        printf:args[0],
        ($secondLine1 -> printf:tpl)
    ]

    [p1, p2, p3, printf:sig] -> :sig
}
