def Main(start) (stop) {
	While<int>{Next2Lines}
	---
	:start -> { 99 -> while:from }
	0 -> while:to
	while:res -> :stop
	while:err -> panic
}

def Next2Lines(data int) (res int, err error) {
	first Relay<int>{FirstLine}?
	dec Dec<int>
	second Relay<int>{SecondLine}?
	---
	:data -> first -> dec -> second -> :res
}

const firstLine1 string = '$0 bottles of beer on the wall, $0 bottles of beer.\n'
const firstLine2 string = '1 bottle of beer on the wall, 1 bottle of beer.'
const firstLine3 string = 'No more bottles of beer on the wall, no more bottles of beer.'

def FirstLine(n int) (sig any, err error) {
	p1 Println, p2 Println, p3 Printf?
	---
	:n -> switch {
		0 -> { $firstLine3 -> p1 }
		1 -> { $firstLine2 -> p2 }
		else -> [
            p3:args[0],
			{ $firstLine1 -> p3:tpl }
		]
	}
	[p1, p2, p3] -> :sig
}

const secondLine1 string = 'Take one down and pass it around, $0 bottles of beer on the wall.\n\n'
const secondLine2 string = 'Take one down and pass it around, 1 bottle of beer on the wall.\n'
const secondLine3 string = 'Take one down and pass it around, no more bottles of beer on the wall.\n'
const secondLine4 string = 'Go to the store and buy some more, 99 bottles of beer on the wall.'

def SecondLine(n int) (sig any, err error) {
	p1 Println, p2 Println, p3 Println, p4 Printf?
	---
	:n -> switch {
		-1 -> { $secondLine4 -> p1 }
		0 -> { $secondLine3 -> p2 } 
		1 -> { $secondLine2 -> p3 }
		else -> [
            p4:args[0],
            { $secondLine1 -> p4:tpl }
        ]
	}
	[p1, p2, p3, p4] -> :sig
}
