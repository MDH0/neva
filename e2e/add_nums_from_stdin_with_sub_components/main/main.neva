import {
	io
 	strconv
}

flow Main(start any) (stop any) {
	Aux, Println<any>
	---
	:start -> aux:sig
	[aux:res, aux:err] -> println:data
	println:sig -> :stop
}

flow Aux(sig any) (res int, err error) {
	reader1 IntReader
	reader2 IntReader
	add Add<int>
	---
	:sig -> reader1:sig
	reader1:num -> [add:acc, reader2:sig]
	reader1:err -> :err
	reader2:err -> :err
	reader2:num -> add:el
	add:res -> :res
}

flow IntReader(sig any) (num int, err error) {
	io.Scanln, strconv.ParseNum<int>
	---
	:sig -> scanln:sig
	scanln:res -> parseNum:data
	parseNum:res -> :num
	parseNum:err -> :err
}
