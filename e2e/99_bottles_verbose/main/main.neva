// https://www.99-bottles-of-beer.net

flow Main(start) (stop) {
    Switch<int>
    next PrintNext2Lines
    ---
    :start -> (99 -> next:n)

    next:n -> switch:data
    -1 -> switch:case[0]

    switch:case[0] -> :stop
    switch:else -> next:n
}

flow PrintNext2Lines(n int) (n int) {
    decr   Decr<int>
    first  PrintFirstLine
    second PrintSecondLine
    ---
    :n -> first:n
    first:n -> decr:data
    decr:res -> second:n
    second:n -> :n
}

// === First Line ===

const firstLine1 string = '$0 bottles of beer on the wall, $0 bottles of beer.\n'
const firstLine2 string = '1 bottle of beer on the wall, 1 bottle of beer.'
const firstLine3 string = 'No more bottles of beer on the wall, no more bottles of beer.'

flow PrintFirstLine(n int) (n int) {
    Switch<int>, Println, Printf, Lock<int>
    ---
    :n -> [switch:data, lock:data]
    0 -> switch:case[0]
    1 -> switch:case[1]

    switch:case[0] -> ($firstLine3 -> println:data)
    switch:case[1] -> ($firstLine2 -> println:data)
    switch:else -> printf:args[0]
    $firstLine1 -> printf:tpl

    [println:sig, printf:sig] -> lock:sig

    lock:data -> :n
}

// === Second Line ===

const secondLine1 string = 'Take one down and pass it around, $0 bottles of beer on the wall.\n\n'
const secondLine2 string = 'Take one down and pass it around, 1 bottle of beer on the wall.\n'
const secondLine3 string = 'Take one down and pass it around, no more bottles of beer on the wall.\n'
const secondLine4 string = 'Go to the store and buy some more, 99 bottles of beer on the wall.'

flow PrintSecondLine(n int) (n int) {
    Switch<int>, Lock<int>, Printf, Println
    ---
    :n -> [switch:data, lock:data]
    -1 -> switch:case[0]
    0 -> switch:case[1]
    1 -> switch:case[2]

    switch:case[0] -> ($secondLine4 -> println:data)
    switch:case[1] -> ($secondLine3 -> println:data)
    switch:case[2] -> ($secondLine2 -> println:data)
    switch:else -> printf:args[0]
    $secondLine1 -> printf:tpl

    [println:sig, printf:sig] -> lock:sig
    lock:data -> :n
}