// Code generated from ./neva.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parsing

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type nevaLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var NevaLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func nevalexerLexerInit() {
	staticData := &NevaLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'#'", "'('", "','", "')'", "'import'", "'{'", "'}'", "':'", "'@'",
		"'/'", "'.'", "'type'", "'<'", "'>'", "'enum'", "'struct'", "'|'", "'interface'",
		"'['", "']'", "'const'", "'='", "'true'", "'false'", "'::'", "'def'",
		"'---'", "'?'", "'->'", "'=>'", "'!'", "'++'", "'--'", "'+'", "'*'",
		"'%'", "'**'", "'=='", "'!='", "'>='", "'<='", "'&&'", "'||'", "'&'",
		"'^'", "'$'", "'..'", "'switch'", "", "'pub'", "", "", "'-'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "COMMENT",
		"PUB_KW", "IDENTIFIER", "INT", "MINUS", "FLOAT", "STRING", "NEWLINE",
		"WS",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32",
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40",
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "COMMENT",
		"PUB_KW", "IDENTIFIER", "LETTER", "INT", "MINUS", "FLOAT", "STRING",
		"NEWLINE", "WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 57, 333, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4,
		1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8,
		1, 9, 1, 9, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 11, 1, 11, 1, 12, 1,
		12, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15,
		1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 17, 1,
		17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19, 1, 19, 1, 20,
		1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1,
		22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24,
		1, 25, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1,
		28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31,
		1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35, 1, 36, 1,
		36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 39,
		1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 43, 1,
		43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46, 1, 46, 1, 46, 1, 47, 1, 47, 1, 47,
		1, 47, 1, 47, 1, 47, 1, 47, 1, 48, 1, 48, 1, 48, 1, 48, 5, 48, 275, 8,
		48, 10, 48, 12, 48, 278, 9, 48, 1, 49, 1, 49, 1, 49, 1, 49, 1, 50, 1, 50,
		1, 50, 5, 50, 287, 8, 50, 10, 50, 12, 50, 290, 9, 50, 1, 51, 1, 51, 1,
		52, 4, 52, 295, 8, 52, 11, 52, 12, 52, 296, 1, 53, 1, 53, 1, 54, 5, 54,
		302, 8, 54, 10, 54, 12, 54, 305, 9, 54, 1, 54, 1, 54, 4, 54, 309, 8, 54,
		11, 54, 12, 54, 310, 1, 55, 1, 55, 5, 55, 315, 8, 55, 10, 55, 12, 55, 318,
		9, 55, 1, 55, 1, 55, 1, 56, 3, 56, 323, 8, 56, 1, 56, 1, 56, 1, 57, 4,
		57, 328, 8, 57, 11, 57, 12, 57, 329, 1, 57, 1, 57, 1, 316, 0, 58, 1, 1,
		3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23,
		12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41,
		21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59,
		30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38, 77,
		39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47, 95,
		48, 97, 49, 99, 50, 101, 51, 103, 0, 105, 52, 107, 53, 109, 54, 111, 55,
		113, 56, 115, 57, 1, 0, 4, 2, 0, 10, 10, 13, 13, 3, 0, 65, 90, 95, 95,
		97, 122, 1, 0, 48, 57, 2, 0, 9, 9, 32, 32, 340, 0, 1, 1, 0, 0, 0, 0, 3,
		1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11,
		1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0,
		19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0,
		0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0,
		0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0,
		0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1,
		0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57,
		1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0,
		65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0,
		0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0,
		0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0,
		0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1,
		0, 0, 0, 0, 97, 1, 0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 105,
		1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0, 0, 0,
		0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 1, 117, 1, 0, 0, 0, 3, 119, 1,
		0, 0, 0, 5, 121, 1, 0, 0, 0, 7, 123, 1, 0, 0, 0, 9, 125, 1, 0, 0, 0, 11,
		132, 1, 0, 0, 0, 13, 134, 1, 0, 0, 0, 15, 136, 1, 0, 0, 0, 17, 138, 1,
		0, 0, 0, 19, 140, 1, 0, 0, 0, 21, 142, 1, 0, 0, 0, 23, 144, 1, 0, 0, 0,
		25, 149, 1, 0, 0, 0, 27, 151, 1, 0, 0, 0, 29, 153, 1, 0, 0, 0, 31, 158,
		1, 0, 0, 0, 33, 165, 1, 0, 0, 0, 35, 167, 1, 0, 0, 0, 37, 177, 1, 0, 0,
		0, 39, 179, 1, 0, 0, 0, 41, 181, 1, 0, 0, 0, 43, 187, 1, 0, 0, 0, 45, 189,
		1, 0, 0, 0, 47, 194, 1, 0, 0, 0, 49, 200, 1, 0, 0, 0, 51, 203, 1, 0, 0,
		0, 53, 207, 1, 0, 0, 0, 55, 211, 1, 0, 0, 0, 57, 213, 1, 0, 0, 0, 59, 216,
		1, 0, 0, 0, 61, 219, 1, 0, 0, 0, 63, 221, 1, 0, 0, 0, 65, 224, 1, 0, 0,
		0, 67, 227, 1, 0, 0, 0, 69, 229, 1, 0, 0, 0, 71, 231, 1, 0, 0, 0, 73, 233,
		1, 0, 0, 0, 75, 236, 1, 0, 0, 0, 77, 239, 1, 0, 0, 0, 79, 242, 1, 0, 0,
		0, 81, 245, 1, 0, 0, 0, 83, 248, 1, 0, 0, 0, 85, 251, 1, 0, 0, 0, 87, 254,
		1, 0, 0, 0, 89, 256, 1, 0, 0, 0, 91, 258, 1, 0, 0, 0, 93, 260, 1, 0, 0,
		0, 95, 263, 1, 0, 0, 0, 97, 270, 1, 0, 0, 0, 99, 279, 1, 0, 0, 0, 101,
		283, 1, 0, 0, 0, 103, 291, 1, 0, 0, 0, 105, 294, 1, 0, 0, 0, 107, 298,
		1, 0, 0, 0, 109, 303, 1, 0, 0, 0, 111, 312, 1, 0, 0, 0, 113, 322, 1, 0,
		0, 0, 115, 327, 1, 0, 0, 0, 117, 118, 5, 35, 0, 0, 118, 2, 1, 0, 0, 0,
		119, 120, 5, 40, 0, 0, 120, 4, 1, 0, 0, 0, 121, 122, 5, 44, 0, 0, 122,
		6, 1, 0, 0, 0, 123, 124, 5, 41, 0, 0, 124, 8, 1, 0, 0, 0, 125, 126, 5,
		105, 0, 0, 126, 127, 5, 109, 0, 0, 127, 128, 5, 112, 0, 0, 128, 129, 5,
		111, 0, 0, 129, 130, 5, 114, 0, 0, 130, 131, 5, 116, 0, 0, 131, 10, 1,
		0, 0, 0, 132, 133, 5, 123, 0, 0, 133, 12, 1, 0, 0, 0, 134, 135, 5, 125,
		0, 0, 135, 14, 1, 0, 0, 0, 136, 137, 5, 58, 0, 0, 137, 16, 1, 0, 0, 0,
		138, 139, 5, 64, 0, 0, 139, 18, 1, 0, 0, 0, 140, 141, 5, 47, 0, 0, 141,
		20, 1, 0, 0, 0, 142, 143, 5, 46, 0, 0, 143, 22, 1, 0, 0, 0, 144, 145, 5,
		116, 0, 0, 145, 146, 5, 121, 0, 0, 146, 147, 5, 112, 0, 0, 147, 148, 5,
		101, 0, 0, 148, 24, 1, 0, 0, 0, 149, 150, 5, 60, 0, 0, 150, 26, 1, 0, 0,
		0, 151, 152, 5, 62, 0, 0, 152, 28, 1, 0, 0, 0, 153, 154, 5, 101, 0, 0,
		154, 155, 5, 110, 0, 0, 155, 156, 5, 117, 0, 0, 156, 157, 5, 109, 0, 0,
		157, 30, 1, 0, 0, 0, 158, 159, 5, 115, 0, 0, 159, 160, 5, 116, 0, 0, 160,
		161, 5, 114, 0, 0, 161, 162, 5, 117, 0, 0, 162, 163, 5, 99, 0, 0, 163,
		164, 5, 116, 0, 0, 164, 32, 1, 0, 0, 0, 165, 166, 5, 124, 0, 0, 166, 34,
		1, 0, 0, 0, 167, 168, 5, 105, 0, 0, 168, 169, 5, 110, 0, 0, 169, 170, 5,
		116, 0, 0, 170, 171, 5, 101, 0, 0, 171, 172, 5, 114, 0, 0, 172, 173, 5,
		102, 0, 0, 173, 174, 5, 97, 0, 0, 174, 175, 5, 99, 0, 0, 175, 176, 5, 101,
		0, 0, 176, 36, 1, 0, 0, 0, 177, 178, 5, 91, 0, 0, 178, 38, 1, 0, 0, 0,
		179, 180, 5, 93, 0, 0, 180, 40, 1, 0, 0, 0, 181, 182, 5, 99, 0, 0, 182,
		183, 5, 111, 0, 0, 183, 184, 5, 110, 0, 0, 184, 185, 5, 115, 0, 0, 185,
		186, 5, 116, 0, 0, 186, 42, 1, 0, 0, 0, 187, 188, 5, 61, 0, 0, 188, 44,
		1, 0, 0, 0, 189, 190, 5, 116, 0, 0, 190, 191, 5, 114, 0, 0, 191, 192, 5,
		117, 0, 0, 192, 193, 5, 101, 0, 0, 193, 46, 1, 0, 0, 0, 194, 195, 5, 102,
		0, 0, 195, 196, 5, 97, 0, 0, 196, 197, 5, 108, 0, 0, 197, 198, 5, 115,
		0, 0, 198, 199, 5, 101, 0, 0, 199, 48, 1, 0, 0, 0, 200, 201, 5, 58, 0,
		0, 201, 202, 5, 58, 0, 0, 202, 50, 1, 0, 0, 0, 203, 204, 5, 100, 0, 0,
		204, 205, 5, 101, 0, 0, 205, 206, 5, 102, 0, 0, 206, 52, 1, 0, 0, 0, 207,
		208, 5, 45, 0, 0, 208, 209, 5, 45, 0, 0, 209, 210, 5, 45, 0, 0, 210, 54,
		1, 0, 0, 0, 211, 212, 5, 63, 0, 0, 212, 56, 1, 0, 0, 0, 213, 214, 5, 45,
		0, 0, 214, 215, 5, 62, 0, 0, 215, 58, 1, 0, 0, 0, 216, 217, 5, 61, 0, 0,
		217, 218, 5, 62, 0, 0, 218, 60, 1, 0, 0, 0, 219, 220, 5, 33, 0, 0, 220,
		62, 1, 0, 0, 0, 221, 222, 5, 43, 0, 0, 222, 223, 5, 43, 0, 0, 223, 64,
		1, 0, 0, 0, 224, 225, 5, 45, 0, 0, 225, 226, 5, 45, 0, 0, 226, 66, 1, 0,
		0, 0, 227, 228, 5, 43, 0, 0, 228, 68, 1, 0, 0, 0, 229, 230, 5, 42, 0, 0,
		230, 70, 1, 0, 0, 0, 231, 232, 5, 37, 0, 0, 232, 72, 1, 0, 0, 0, 233, 234,
		5, 42, 0, 0, 234, 235, 5, 42, 0, 0, 235, 74, 1, 0, 0, 0, 236, 237, 5, 61,
		0, 0, 237, 238, 5, 61, 0, 0, 238, 76, 1, 0, 0, 0, 239, 240, 5, 33, 0, 0,
		240, 241, 5, 61, 0, 0, 241, 78, 1, 0, 0, 0, 242, 243, 5, 62, 0, 0, 243,
		244, 5, 61, 0, 0, 244, 80, 1, 0, 0, 0, 245, 246, 5, 60, 0, 0, 246, 247,
		5, 61, 0, 0, 247, 82, 1, 0, 0, 0, 248, 249, 5, 38, 0, 0, 249, 250, 5, 38,
		0, 0, 250, 84, 1, 0, 0, 0, 251, 252, 5, 124, 0, 0, 252, 253, 5, 124, 0,
		0, 253, 86, 1, 0, 0, 0, 254, 255, 5, 38, 0, 0, 255, 88, 1, 0, 0, 0, 256,
		257, 5, 94, 0, 0, 257, 90, 1, 0, 0, 0, 258, 259, 5, 36, 0, 0, 259, 92,
		1, 0, 0, 0, 260, 261, 5, 46, 0, 0, 261, 262, 5, 46, 0, 0, 262, 94, 1, 0,
		0, 0, 263, 264, 5, 115, 0, 0, 264, 265, 5, 119, 0, 0, 265, 266, 5, 105,
		0, 0, 266, 267, 5, 116, 0, 0, 267, 268, 5, 99, 0, 0, 268, 269, 5, 104,
		0, 0, 269, 96, 1, 0, 0, 0, 270, 271, 5, 47, 0, 0, 271, 272, 5, 47, 0, 0,
		272, 276, 1, 0, 0, 0, 273, 275, 8, 0, 0, 0, 274, 273, 1, 0, 0, 0, 275,
		278, 1, 0, 0, 0, 276, 274, 1, 0, 0, 0, 276, 277, 1, 0, 0, 0, 277, 98, 1,
		0, 0, 0, 278, 276, 1, 0, 0, 0, 279, 280, 5, 112, 0, 0, 280, 281, 5, 117,
		0, 0, 281, 282, 5, 98, 0, 0, 282, 100, 1, 0, 0, 0, 283, 288, 3, 103, 51,
		0, 284, 287, 3, 103, 51, 0, 285, 287, 3, 105, 52, 0, 286, 284, 1, 0, 0,
		0, 286, 285, 1, 0, 0, 0, 287, 290, 1, 0, 0, 0, 288, 286, 1, 0, 0, 0, 288,
		289, 1, 0, 0, 0, 289, 102, 1, 0, 0, 0, 290, 288, 1, 0, 0, 0, 291, 292,
		7, 1, 0, 0, 292, 104, 1, 0, 0, 0, 293, 295, 7, 2, 0, 0, 294, 293, 1, 0,
		0, 0, 295, 296, 1, 0, 0, 0, 296, 294, 1, 0, 0, 0, 296, 297, 1, 0, 0, 0,
		297, 106, 1, 0, 0, 0, 298, 299, 5, 45, 0, 0, 299, 108, 1, 0, 0, 0, 300,
		302, 7, 2, 0, 0, 301, 300, 1, 0, 0, 0, 302, 305, 1, 0, 0, 0, 303, 301,
		1, 0, 0, 0, 303, 304, 1, 0, 0, 0, 304, 306, 1, 0, 0, 0, 305, 303, 1, 0,
		0, 0, 306, 308, 5, 46, 0, 0, 307, 309, 7, 2, 0, 0, 308, 307, 1, 0, 0, 0,
		309, 310, 1, 0, 0, 0, 310, 308, 1, 0, 0, 0, 310, 311, 1, 0, 0, 0, 311,
		110, 1, 0, 0, 0, 312, 316, 5, 39, 0, 0, 313, 315, 9, 0, 0, 0, 314, 313,
		1, 0, 0, 0, 315, 318, 1, 0, 0, 0, 316, 317, 1, 0, 0, 0, 316, 314, 1, 0,
		0, 0, 317, 319, 1, 0, 0, 0, 318, 316, 1, 0, 0, 0, 319, 320, 5, 39, 0, 0,
		320, 112, 1, 0, 0, 0, 321, 323, 5, 13, 0, 0, 322, 321, 1, 0, 0, 0, 322,
		323, 1, 0, 0, 0, 323, 324, 1, 0, 0, 0, 324, 325, 5, 10, 0, 0, 325, 114,
		1, 0, 0, 0, 326, 328, 7, 3, 0, 0, 327, 326, 1, 0, 0, 0, 328, 329, 1, 0,
		0, 0, 329, 327, 1, 0, 0, 0, 329, 330, 1, 0, 0, 0, 330, 331, 1, 0, 0, 0,
		331, 332, 6, 57, 0, 0, 332, 116, 1, 0, 0, 0, 10, 0, 276, 286, 288, 296,
		303, 310, 316, 322, 329, 1, 0, 1, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// nevaLexerInit initializes any static state used to implement nevaLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewnevaLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func NevaLexerInit() {
	staticData := &NevaLexerLexerStaticData
	staticData.once.Do(nevalexerLexerInit)
}

// NewnevaLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewnevaLexer(input antlr.CharStream) *nevaLexer {
	NevaLexerInit()
	l := new(nevaLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &NevaLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "neva.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// nevaLexer tokens.
const (
	nevaLexerT__0       = 1
	nevaLexerT__1       = 2
	nevaLexerT__2       = 3
	nevaLexerT__3       = 4
	nevaLexerT__4       = 5
	nevaLexerT__5       = 6
	nevaLexerT__6       = 7
	nevaLexerT__7       = 8
	nevaLexerT__8       = 9
	nevaLexerT__9       = 10
	nevaLexerT__10      = 11
	nevaLexerT__11      = 12
	nevaLexerT__12      = 13
	nevaLexerT__13      = 14
	nevaLexerT__14      = 15
	nevaLexerT__15      = 16
	nevaLexerT__16      = 17
	nevaLexerT__17      = 18
	nevaLexerT__18      = 19
	nevaLexerT__19      = 20
	nevaLexerT__20      = 21
	nevaLexerT__21      = 22
	nevaLexerT__22      = 23
	nevaLexerT__23      = 24
	nevaLexerT__24      = 25
	nevaLexerT__25      = 26
	nevaLexerT__26      = 27
	nevaLexerT__27      = 28
	nevaLexerT__28      = 29
	nevaLexerT__29      = 30
	nevaLexerT__30      = 31
	nevaLexerT__31      = 32
	nevaLexerT__32      = 33
	nevaLexerT__33      = 34
	nevaLexerT__34      = 35
	nevaLexerT__35      = 36
	nevaLexerT__36      = 37
	nevaLexerT__37      = 38
	nevaLexerT__38      = 39
	nevaLexerT__39      = 40
	nevaLexerT__40      = 41
	nevaLexerT__41      = 42
	nevaLexerT__42      = 43
	nevaLexerT__43      = 44
	nevaLexerT__44      = 45
	nevaLexerT__45      = 46
	nevaLexerT__46      = 47
	nevaLexerT__47      = 48
	nevaLexerCOMMENT    = 49
	nevaLexerPUB_KW     = 50
	nevaLexerIDENTIFIER = 51
	nevaLexerINT        = 52
	nevaLexerMINUS      = 53
	nevaLexerFLOAT      = 54
	nevaLexerSTRING     = 55
	nevaLexerNEWLINE    = 56
	nevaLexerWS         = 57
)
