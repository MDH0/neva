// New emits a message in an infinite loop.
// It is inteited to be used with #bind directive.
// You should prefer constant references and literals over New if possible.
// New, just like constant senders, must be used with caution.
// Being infinite, it can easily lead to buffer overflow.
// New is within small group of components without inports.
#extern(new)
pub flow New<T>() (msg T)

// Del receives and discards the message.
// You should avoid using it because compiler will insert it automatically
// for every unused outport.
// Del is within small group of components without outports.
#extern(del)
pub flow Del(msg any) ()

// Panic immidiately terminates the program after message is received.
// It exits the process with non-zero status code and prints flowtrace to stderr.
// Panic is within small group of components without outports.
#extern(panic)
pub flow Panic(msg any) ()

// Struct is used to create structures.
// Inports for Struct are generated by compiler based on provided type argument
// thanks to #autoports directive. This is why it has no inports in source code.
// This is the only component that should use #autoports.
#autoports
#extern(struct_builder)
pub flow Struct<T struct {}> () (msg T)

// Field is used to access fields of structures.
// You prefer dot notation `-> .<field> ->` instead.
// Dot notation is a syntax sugar for Field.
#extern(field)
pub flow Field<T>(msg struct {}) (msg T)

// Unwrap is used to extract value from Maybe type.
#extern(unwrap)
pub flow Unwrap<T>(data maybe<T>) (some T, none struct{})
